apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}
//获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.forthorn.projecting"
        minSdkVersion 17
        targetSdkVersion 20
        versionCode 61
        versionName "2.0.5"
        multiDexEnabled true
        //PL版本
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a'
            // 还可以添加 'armeabi', 'armeabi-v8a','x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "407efdb59c625146902da8ae", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name.equals('release')) {
                            fileName = "Projecting_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
                        } else if (variant.buildType.name.equals('debug')) {
                            fileName = "Projecting_v${defaultConfig.versionName}_${defaultConfig.versionCode}_debug.apk"
                        }
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name.equals('release')) {
                            fileName = "Projecting_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
                        } else if (variant.buildType.name.equals('debug')) {
                            fileName = "Projecting_v${defaultConfig.versionName}_${defaultConfig.versionCode}_debug.apk"
                        }
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs', 'src/main/jniLibs']
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
        additionalParameters += '--multi-dex'
        additionalParameters += '--set-max-idx-number=35000'
        //每个包内方法数上限（根据实际项目配置这个数，来适配4.0-4.4一些低端机型，因为拆分的dex太大，这些低端机型加载不了dex）
        additionalParameters += '--minimal-main-dex'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // 此处以JMessage 2.2.1 版本为例。
    // 此处以JCore 1.1.6 版本为例。
//    compile project(':libvlc')
//    compile project(':libpldroid')
//    compile project(':libexo')
    compile 'com.danikula:videocache:2.7.1'
    compile project(':libijk')
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile 'com.qiniu:happy-dns:0.2.+'
    compile 'cn.jiguang.sdk:jmessage:2.8.2'
    compile 'cn.jiguang.sdk:jcore:1.2.7'
    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    compile 'io.reactivex:rxjava:1.2.4'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.liulishuo.filedownloader:library:1.6.8'
    compile 'com.android.support:recyclerview-v7:28.0.0'
    compile 'com.android.support:support-v4:28.0.0'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.8'
    compile 'com.tencent.bugly:nativecrashreport:3.6.0'
//    compile 'com.android.support:multidex:1.0.3'//分包
}
